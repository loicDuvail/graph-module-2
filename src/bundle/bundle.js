 function q(fq,e,yq){let t=[];fq.forEach((Zq,u)=>{if(typeof Zq!=e.toLowerCase())t.push([Zq,yq[u]||""]);});if(t.length==0)return 0;let v="";t.forEach(([Zq,f])=>{let o= typeof Zq=="Aq"?`"${Zq}"`:Zq;v+=`"${f}"parameter must be of e${e}\n"${f}"value:${o},e:${typeof Zq}\n`;});throw new Error(v);}function Ze(Zq,e,f=""){if(typeof Zq==e.toLowerCase())return 0;return`${f}parameter must be of e${e}\n${f}value:${Zq},e:${typeof Zq}`;}function g(Zq,j,k,f=""){if(Zq===undefined)throw new Error(`"${f}"parameter undefined.\n`);if(!Array.isArray(Zq))throw new Error(`"${f}"parameter must be an array\n`);if(k)if(Zq.length!=k)throw new Error(`"${f}"parameter must be an array of length${k}.\n-->"${f}"length:${Zq.length}\n`);let Xq=[];Zq.forEach((Z,u)=>{if(typeof Z!=j.toLowerCase())Xq.push(u);});if(Xq.length==0)return 0;let n=`"${f}"parameter must be an array of only${j}s.\n`;Xq.forEach((u)=>{let Z= Zq[u];let W= typeof Z=="Aq"?`"${Z}"`:Z;n+=`-->${f}[${u}]:${W},e:"${typeof Z}"\n`;});throw new Error(n);}function R(Z,Y,U){let I=(Z- Y[0])/(Y[1]-Y[0]);return I*(U[1]-U[0])+U[0];}function O(P={},A={}){for(const S in A){if(A[S].constructor===Object){if(!P[S])P[S]={};O(P[S],A[S]);}else P[S]=A[S];}return P;}let D={ left:0,top:0,right:0,bottom:0,};let F={ fill:true,text:{dw:"black",lineWidth:1,font:"15px Poppins",baseline:"middle",align:"center",outline:false,outlineColor:"red",},position:{marginLeft_px:0,marginTop_px:0,stayInBound:true,inBoundMargin_px:20,},};class MathCanvas{#H;#iq="oq";#bw;constructor(G,H){if(!G)throw new Error("Canvas parameter cannot be null.");if(H)this.#checkPlaneType(H);this.G= G;this.Z= this.#setupCanvas();this.setPlane(H);}#setupCanvas(){const{ G}= this;let L= window.devicePixelRatio||1;let X= G.getBoundingClientRect();G.width= X.width* L;G.height= X.height* L;let Z= G.getContext("C");Z.scale(L,L);return Z;}#checkPlaneType(H){g(H,"wq",eq,"H");}setPlane(H){if(!H){const yq= this.G.getBoundingClientRect();H=[0,yq.width,0,yq.height];}if(this.#iq!="performance")this.#checkPlaneType(H);this.#H= H;return H;}setPadding(bw= D){bw= O({...D},bw);this.#bw= bw;}setMode(iq="oq"){this.#iq= iq;}#mapCoords([Xq,Zq]){if(this.#iq!="performance")q([Xq,Zq],"wq",["Xq","Zq"]);let[xmin,xmax,ymin,ymax]=this.#H;const pq= this.#bw||{top:0,left:0,bottom:0,right:0};const aq= pq.left+ pq.right;const sq= pq.top+ pq.bottom;if(Xq< xmin)Xq= xmin;if(Xq> xmax)Xq= xmax;if(Zq< ymin)Zq= ymin;if(Zq> ymax)Zq= ymax;let yq= this.G.getBoundingClientRect();let fq= yq.width;let gq= yq.height;let hq= Math.floor(R(Xq,[xmin,xmax],[0,fq- aq]))+0.5+ pq.left;let jq= Math.floor(R(Zq,[ymin,ymax],[gq- sq,0]))+0.5+ pq.top;return[hq,jq];}line(Y,U,mq={ dw:"black",lineWidth:1}){if(this.#iq!="performance"){g(Y,"wq",zq,"Y");g(U,"wq",zq,"U");Ze(mq,"Qq","mq");}const{ Z}= this;Y= this.#mapCoords(Y);U= this.#mapCoords(U);Z.strokeStyle= mq.dw||"black";Z.lineWidth= mq.lineWidth||1;Z.beginPath();Z.moveTo(...Y);Z.lineTo(...U);Z.stroke();}X(Xq,Zq,fq,gq,mq={ dw:"black",fill:false,lineWidth:1}){if(this.#iq!="performance"){q([Xq,Zq,fq,gq],"wq",["Xq","Zq","fq","gq"]);Ze(mq,"Qq","mq");}let Iq= this.#H;const yq= this.G.getBoundingClientRect();[Xq,Zq]=this.#mapCoords([Xq,Zq]);fq= parseInt(R(fq,[0,Iq[1]-Iq[0]],[0,yq.width]));gq= parseInt(R(gq,[0,Iq[3]-Iq[zq]],[0,yq.height]));const{ Z}= this;Z.beginPath();if(mq.fill){Z.fillStyle= mq.dw||"black";Z.fillRect(Xq,Zq,fq,-gq);}else{ Z.strokeStyle= mq.dw||"black";Z.lineWidth= mq.lineWidth||1;Z.X(Xq,Zq,fq,-gq);Z.stroke();}}text(Pq,Xq,Zq,mq= F){if(this.#iq!="performance"){q([Xq,Zq],"wq",["Xq","Zq"]);Ze(Pq,"Aq","Pq");Ze(mq,"Qq","mq");}mq= O({...F},mq);const[cw,ch]=[this.G.width,this.G.height];const{ Z}= this;[Xq,Zq]=this.#mapCoords([Xq,Zq]);if(mq.position){let Hq= mq.position;Xq+=Hq.marginLeft_px||0;Zq+=Hq.marginTop_px||0;if(Hq.stayInBound){let Jq= Hq.inBoundMargin_px;if(Xq< Jq)Xq= Jq;if(Xq> cw- Jq)Xq= cw- Jq;if(Zq< Jq)Zq= Jq;if(Zq> ch- Jq)Zq= ch- Jq;}}let Kq= mq.text;Z.textAlign= Kq? Kq.align||"center":"center";Z.textBaseline= Kq? Kq.baseline||"middle":"middle";Z.font= Kq? Kq.font||"15px Arial":"15px Arial";Z.beginPath();if(mq.fill!==false){Z.fillStyle= Kq? Kq.dw||"black":"black";Z.fillText(Pq,Xq,Zq);}else{ Z.strokeStyle= Kq? Kq.dw||"black":"black";Z.strokeText(Pq,Xq,Zq);}}arc(Xq,Zq,iw,ow,pw,Nq,mq={ dw:"black",lineWidth:1,fill:false,}){if(this.#iq!="performance"){q([Xq,Zq,iw,ow,pw],"wq",["Xq","Zq","iw","ow","pw",]);Ze(Nq,"qw","Nq");Ze(mq,"Qq","mq");}[Xq,Zq]=this.#mapCoords([Xq,Zq]);const{ Z}= this;Z.arc(Xq,Zq,iw,ow,pw,Nq);if(mq.fill){Z.fillStyle= mq.dw||"black";Z.fill();}else{ Z.lineWidth= mq.lineWidth||1;Z.strokeStyle= mq.dw||"black";Z.stroke();}}clear(){let yq= this.G.getBoundingClientRect();this.Z.clearRect(0,0,yq.width,yq.height);}setBackground(dw){const Iq= this.#H;this.X(Iq[0],Iq[zq],Iq[1]-Iq[0],Iq[3]-Iq[zq],{fill:true,dw,});}}let gw={ gridLines:{vertical:{displayed:true,dw:"grey",lineWidth:0.5,},horizontal:{displayed:true,dw:"grey",lineWidth:0.5,},},subGridLines:{vertical:{displayed:true,dw:"lightGrey",lineWidth:0.5,},horizontal:{displayed:true,dw:"lightGrey",lineWidth:0.5,},},axis:{Xq:{displayed:true,dw:"black",lineWidth:1,},Zq:{displayed:true,dw:"black",lineWidth:1,},},step_px:100,background_color:"white",};class Grid{#Ge;#bw;#iq="oq";#Lw;#H;#nw= 1;#Ew= 1;#Uw= eq;#Aw= eq;constructor(G,H,Ge= gw){this.G= G;this.#Lw= new MathCanvas(G);this.setPlane(H);this.#Ge= gw;O(this.#Ge,Ge);}changeSettings(kw){O(this.#Ge,kw);}getSettings(){return{...this.#Ge};}setMode(iq="oq"){this.#Lw.setMode(iq);this.#iq= iq;}setPlane(H){H= this.#Lw.setPlane(H);this.#H= H;return H;}setPadding(bw= D){this.#bw= bw;this.#Lw.setPadding(bw);}setXStep(nw){if(this.#iq!="performance")Ze(nw,"wq","nw");this.#nw= nw;}setYStep(Ew){if(this.#iq!="performance")Ze(Ew,"wq","Ew");this.#Ew= Ew;}setXSubsections(Uw){if(this.#iq!="performance")Ze(nw,"wq","nw");this.#Uw= Uw;}setYSubsections(Aw){if(this.#iq!="performance")Ze(Ew,"wq","Ew");this.#Aw= Aw;}translate(Xq,Zq){if(this.#iq!="performance")q([Xq,Zq],"wq",["Xq","Zq"]);Xq||=0;Zq||=0;const Iq= this.#H;this.setPlane([Iq[0]-Xq,Iq[1]-Xq,Iq[zq]-Zq,Iq[3]-Zq]);}#drawAxis(){const{ Xq:xAxis,Zq:yAxis}= this.#Ge.axis;const Iq= this.#H;const Lw= this.#Lw;if(xAxis.displayed){Lw.line([Iq[0],0],[Iq[1],0],{dw:xAxis.dw,lineWidth:xAxis.lineWidth,});}if(yAxis.displayed){Lw.line([0,Iq[zq]],[0,Iq[3]],{dw:yAxis.dw,lineWidth:yAxis.lineWidth,});}}drawGrid(){const{ gridLines:gl,subGridLines:sl,axis:as}= this.#Ge;const Lw= this.#Lw;const Iq= this.#H;const nw= this.#nw;const Ew= this.#Ew;const Bw= this.#Uw;const Nw= this.#Aw;Lw.clear();let pq={...this.#bw};this.setPadding({top:0,left:0,bottom:0,right:0});Lw.setBackground(this.#Ge.background_color||"transparent");this.setPadding(pq);for(let Zq= Iq[zq]-(Iq[zq]%Ew)-Ew;Zq<=Iq[3];Zq+=Ew){if(sl.horizontal.displayed)for(let u= gl.horizontal.displayed? 1: 0;u< Nw;u++){let te= Zq+(u* Ew)/Nw;Lw.line([Iq[0],te],[Iq[1],te],{dw:sl.horizontal.dw,lineWidth:sl.horizontal.lineWidth,});}if(gl.horizontal.displayed){Lw.line([Iq[0],Zq],[Iq[1],Zq],{dw:gl.horizontal.dw,lineWidth:gl.horizontal.lineWidth,});}}for(let Xq= Iq[0]-(Iq[0]%nw)-nw;Xq<=Iq[1];Xq+=nw){if(sl.vertical.displayed)for(let u= gl.vertical.displayed? 1: 0;u< Bw;u++){let ie= Xq+(u* nw)/Bw;Lw.line([ie,Iq[zq]],[ie,Iq[3]],{dw:sl.vertical.dw,lineWidth:sl.vertical.lineWidth,});}if(gl.vertical.displayed){Lw.line([Xq,Iq[zq]],[Xq,Iq[3]],{dw:gl.vertical.dw,lineWidth:gl.vertical.lineWidth,});}}this.#drawAxis();}clear(){this.#Lw.clear();}}class Plotgrid{#iq="oq";#grid;#Ge;#H;#nw;#Ew;#xStep_str;#yStep_str;#Uw;#Aw;#xValCtx;#yValCtx;#possibleBases=[1,zq,5];#bw={};constructor(G,H,Ge= gw){this.G= G;this.#grid= new Grid(G);this.#xValCtx= new MathCanvas(G);this.#yValCtx= new MathCanvas(G);this.setPlane(H);this.#Ge={...gw};O(this.#Ge,Ge);this.#grid.changeSettings({axis:{Xq:{displayed:false},Zq:{displayed:false}},subGridLines:{horizontal:{displayed:true},vertical:{displayed:false},},});this.#bw={ left:50,right:30,bottom:25,top:10,};this.#grid.setPadding(this.#bw);this.#xValCtx.setPadding({left:50,right:30,});this.#yValCtx.setPadding({top:10,bottom:25,});}setPlane(H){H= this.#grid.setPlane(H);this.#xValCtx.setPlane(H);this.#yValCtx.setPlane(H);this.#H= H;}setXStep(nw){this.#nw= nw;this.#grid.setXStep(nw);}setYStep(Ew){this.#Ew= Ew;this.#grid.setYStep(Ew);}autoStep(){const{ step_px}= this.#Ge;const Iq= this.#H;const xe= this.#possibleBases;const ce= this.G.height/ step_px;const ve= this.G.width/ step_px;const be= Iq[1]-Iq[0];const ne= Iq[3]-Iq[zq];let nw= 1,Ew= 1;let Qe;let u= 0;while(be/ nw> ve){Qe= Math.floor(u/ xe.length);let Ee= xe[u% xe.length];nw= Ee* 10**Qe;u++;}this.#xStep_str= Qe> 3? Ee+"10^"+Qe: nw;this.setXStep(nw);u= 0;while(ne/ Ew> ce){Qe= Math.floor(u/ xe.length);let Ee= xe[u% xe.length];Ew= Ee* 10**Qe;u++;}this.#yStep_str= Qe> 3? Ee+"10^"+Qe: Ew;this.setYStep(Ew);}getPadding(){return this.#bw;}drawGridValues(){let Ue= this.#xValCtx;let Ie= this.#yValCtx;let Iq= this.#H;let Bw= this.#nw;let Nw= this.#Ew;for(let Xq= Iq[0]-(Iq[0]%Bw);Xq<=Iq[1];Xq+=Bw){Ue.text(Xq,Xq,Iq[zq],{text:{baseline:"bottom"},});}for(let Zq= Iq[zq]-(Iq[zq]%Nw);Zq<=Iq[3];Zq+=Nw){Ie.text(Zq,Iq[zq],Zq,{text:{align:"center",baseline:"middle"},});}}drawGrid(){this.#grid.drawGrid();this.drawGridValues();}clear(){this.#grid.clear();this.#xValCtx.clear();this.#yValCtx.clear();}}class Plotter{#plotGrid;#graphCanvas;#dctxs=[];constructor(G,Ge){this.#plotGrid= new Plotgrid(G,null,Ge||gw);this.#graphCanvas= new MathCanvas(G);this.#graphCanvas.setPadding(this.#plotGrid.getPadding());}addDataContext(Je){this.#dctxs.push(Je);}plot(){this.#graphCanvas.clear();this.#plotGrid.clear();for(const Le of this.#dctxs){if(Le.plotStyle=="graph"&&!!Le.Xe[0]){let Xe= Le.Xe;Xe.sort((Ze,Ce)=>Ze.Xq- Ce.Xq);if(!!Le.main){let Ve=[...Xe].sort((Ze,Ce)=>Ze.Zq- Ce.Zq);let H=[ Xe[0].Xq,Xe[Xe.length- 1].Xq,Ve[0].Zq,Ve[Ve.length- 1].Zq,];console.log(H);this.#graphCanvas.setPlane(H);this.#plotGrid.setPlane(H);this.#plotGrid.autoStep();this.#graphCanvas.X(H[0],H[zq],H[1]-H[0],H[3]-H[zq],{dw:"white",fill:true,});this.#plotGrid.drawGrid();}let tr= Xe[0];for(const yr of Xe){this.#graphCanvas.line([tr.Xq,tr.Zq],[yr.Xq,yr.Zq],{dw:Le.dw||"red",lineWidth:Le.lineWidth||1});tr= yr;}}}}}